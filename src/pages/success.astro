---
import BaseLayout from "../layouts/Layout.astro";
import Stripe from "stripe";

// Usa tu cliente anon para Stripe
import { supabase } from "../lib/supabaseClient";
// Y el cliente admin para orders
import { supabaseAdmin } from "../lib/supabaseAdminClient";

import InvoiceButton from "../components/InvoiceButton.jsx";

const stripe = new Stripe(import.meta.env.STRIPE_SECRET_KEY, {
  apiVersion: "2025-05-28.basil",
});

const sessionId = Astro.url.searchParams.get("session_id");

// Validación básica del session_id
if (!sessionId) {
  console.log("❌ No session_id provided, redirecting to home");
  return Astro.redirect("/");
}

// Validar formato del session_id (debe empezar con cs_)
if (!sessionId.startsWith("cs_")) {
  console.log("❌ Invalid session_id format:", sessionId);
  return Astro.redirect("/?error=invalid_session");
}

console.log("🔍 Procesando session_id:", sessionId);

// Variables para el debug
let session = null;
let stripeError = null;
let dbOrder = null;
let dbError = null;

// 1) Intentar recuperar la sesión de Stripe
try {
  session = await stripe.checkout.sessions.retrieve(sessionId, {
    expand: ["line_items.data.price.product", "customer"],
  });
  console.log("✅ Sesión de Stripe recuperada:", session.id);
  console.log("📊 Payment status:", session.payment_status);
} catch (err) {
  console.error("❌ Error fetching Stripe session:", err);
  stripeError = err;

  // Si es un error 404, el session no existe
  if (err.code === "resource_missing") {
    console.log("🔍 Session no encontrado en Stripe, verificando en BD...");
  }
}

// 2) Si no hay sesión en Stripe, intentar buscar por session_id en BD
if (!session) {
  const { data: orderBySession, error: sessionError } = await supabaseAdmin
    .from("orders")
    .select(
      `
      id, 
      amount_total, 
      invoice_url, 
      checkout_session_id,
      created_at,
      user_id,
      status,
      profiles!inner(email, full_name)
    `
    )
    .eq("checkout_session_id", sessionId)
    .maybeSingle();

  if (sessionError) {
    console.error("❌ Error buscando orden por session:", sessionError);
    dbError = sessionError;
  } else if (orderBySession) {
    console.log(
      "✅ Orden encontrada en BD sin sesión de Stripe:",
      orderBySession.id
    );
    dbOrder = orderBySession;
  } else {
    console.log("❌ No se encontró orden con este session_id en BD");
  }
}

// 3) Si hay sesión, buscar el pedido correspondiente en BD
if (session) {
  const { data: order, error } = await supabaseAdmin
    .from("orders")
    .select(
      `
      id, 
      amount_total, 
      invoice_url, 
      checkout_session_id,
      created_at,
      user_id,
      status,
      profiles!inner(email, full_name)
    `
    )
    .eq("checkout_session_id", sessionId)
    .maybeSingle();

  dbOrder = order;
  dbError = error;

  if (error) {
    console.error("❌ Error buscando orden:", error);
  } else if (order) {
    console.log("✅ Orden encontrada en BD:", order.id);
  } else {
    console.log("⚠️ Sesión existe en Stripe pero no hay orden en BD");
  }
}

// 4) Construir información para mostrar
let productDetails = [];
let totalItems = 0;
let totalAmount = 0;

// Si hay sesión de Stripe, usar esos datos
if (session?.line_items?.data) {
  productDetails = session.line_items.data.map((li) => {
    const prod = (li.price as any).product as Stripe.Product;
    totalItems += li.quantity || 1;
    return {
      name: prod?.name ?? li.description ?? "Artículo",
      quantity: li.quantity || 1,
      amount: li.amount_total,
      price: (li.price as any)?.unit_amount,
    };
  });
  totalAmount = session.amount_total / 100;
} else if (dbOrder) {
  // Si no hay sesión pero sí orden en BD, usar esos datos
  totalAmount = dbOrder.amount_total;
  productDetails = [
    {
      name: "Producto adquirido",
      quantity: 1,
      amount: dbOrder.amount_total * 100, // BD guarda en euros, Stripe en centavos
      price: dbOrder.amount_total * 100,
    },
  ];
  totalItems = 1;
}

// 5) Información del cliente y pedido
const customerEmail =
  session?.customer_details?.email ||
  session?.customer?.email ||
  dbOrder?.profiles?.email;
const customerName =
  session?.customer_details?.name || dbOrder?.profiles?.full_name;
const orderDate = dbOrder?.created_at
  ? new Date(dbOrder.created_at)
  : session
    ? new Date(session.created * 1000)
    : new Date();
const orderId = dbOrder?.id?.substring(0, 8) || sessionId.substring(0, 8);
const paymentStatus =
  session?.payment_status ||
  (dbOrder?.status === "completed" ? "paid" : "unknown");

// Debug info
const isDev = import.meta.env.DEV;
const debugInfo = {
  sessionId,
  hasSession: !!session,
  hasDbOrder: !!dbOrder,
  paymentStatus,
  sessionCreated: session
    ? new Date(session.created * 1000).toISOString()
    : null,
  dbOrderId: dbOrder?.id,
  dbOrderStatus: dbOrder?.status,
  stripeError: stripeError?.message,
  dbError: dbError?.message,
  totalAmount,
  productCount: productDetails.length,
};

// 6) Determinar si mostrar éxito o error
const showSuccess = session || dbOrder;
const hasPaymentData = totalAmount > 0 && productDetails.length > 0;
---

<BaseLayout
  title={showSuccess ? "¡Compra Exitosa!" : "Error en el Procesamiento"}
>
  {/* Debug info en desarrollo */}
  {
    isDev && (
      <div class="fixed top-4 right-4 bg-yellow-100 border border-yellow-400 text-yellow-800 p-4 rounded-lg text-xs max-w-sm z-50 max-h-96 overflow-auto">
        <strong>Debug Info:</strong>
        <pre class="mt-2 whitespace-pre-wrap text-xs">
          {JSON.stringify(debugInfo, null, 2)}
        </pre>
      </div>
    )
  }

  <div
    class="min-h-screen bg-gradient-to-br from-green-50 via-blue-50 to-purple-50 py-12 px-4 sm:px-6 lg:px-8"
  >
    <div class="max-w-4xl mx-auto">
      {
        showSuccess && hasPaymentData ? (
          <div class="space-y-8">
            {/* Header de éxito */}
            <div class="text-center">
              <div class="mx-auto flex items-center justify-center h-20 w-20 rounded-full bg-green-100 mb-6">
                <svg
                  class="h-10 w-10 text-green-600"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M5 13l4 4L19 7"
                  />
                </svg>
              </div>
              <h1 class="text-4xl font-bold text-gray-900 mb-2">
                {paymentStatus === "paid"
                  ? "¡Pago Completado!"
                  : "¡Pedido Procesado!"}
              </h1>
              <p class="text-xl text-gray-600 mb-4">
                Gracias por tu compra, {customerName || "cliente"}
              </p>
              <div class="inline-flex items-center px-4 py-2 bg-green-100 text-green-800 rounded-full text-sm font-medium">
                <svg
                  class="w-4 h-4 mr-2"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                >
                  <path
                    fill-rule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                    clip-rule="evenodd"
                  />
                </svg>
                {session ? "Pago procesado" : "Pedido confirmado"} - ID: #
                {orderId}
              </div>

              {paymentStatus === "pending" && (
                <div class="mt-4 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
                  <p class="text-yellow-800 text-sm">
                    <strong>Estado del pago:</strong> Pendiente - El pago está
                    siendo procesado
                  </p>
                </div>
              )}

              {!session && dbOrder && (
                <div class="mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg">
                  <p class="text-blue-800 text-sm">
                    <strong>Información recuperada:</strong> Datos obtenidos de
                    nuestro sistema
                  </p>
                </div>
              )}
            </div>

            {/* Detalles del pedido */}
            <div class="bg-white rounded-2xl shadow-lg border border-gray-200 overflow-hidden">
              <div class="bg-gradient-to-r from-blue-600 to-purple-600 px-6 py-4">
                <h2 class="text-xl font-bold text-white">Resumen del Pedido</h2>
              </div>

              <div class="p-6">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                  {/* Información del cliente */}
                  <div>
                    <h3 class="text-lg font-semibold text-gray-900 mb-3">
                      Información del Cliente
                    </h3>
                    <div class="space-y-2 text-sm">
                      <div class="flex items-center">
                        <svg
                          class="w-4 h-4 mr-2 text-gray-400"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                          />
                        </svg>
                        <span class="text-gray-600">Nombre:</span>
                        <span class="ml-2 font-medium">
                          {customerName || "No especificado"}
                        </span>
                      </div>
                      <div class="flex items-center">
                        <svg
                          class="w-4 h-4 mr-2 text-gray-400"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
                          />
                        </svg>
                        <span class="text-gray-600">Email:</span>
                        <span class="ml-2 font-medium">
                          {customerEmail || "No especificado"}
                        </span>
                      </div>
                    </div>
                  </div>

                  {/* Información del pedido */}
                  <div>
                    <h3 class="text-lg font-semibold text-gray-900 mb-3">
                      Detalles del Pedido
                    </h3>
                    <div class="space-y-2 text-sm">
                      <div class="flex items-center">
                        <svg
                          class="w-4 h-4 mr-2 text-gray-400"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"
                          />
                        </svg>
                        <span class="text-gray-600">ID de Transacción:</span>
                        <span class="ml-2 font-medium">#{orderId}</span>
                      </div>
                      <div class="flex items-center">
                        <svg
                          class="w-4 h-4 mr-2 text-gray-400"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M8 7V3a4 4 0 118 0v4m-4 12v-8m-6 8h12a2 2 0 002-2V9a2 2 0 00-2-2H6a2 2 0 00-2 2v10a2 2 0 002 2z"
                          />
                        </svg>
                        <span class="text-gray-600">Fecha:</span>
                        <span class="ml-2 font-medium">
                          {orderDate.toLocaleDateString("es-ES", {
                            year: "numeric",
                            month: "long",
                            day: "numeric",
                            hour: "2-digit",
                            minute: "2-digit",
                          })}
                        </span>
                      </div>
                      <div class="flex items-center">
                        <svg
                          class="w-4 h-4 mr-2 text-gray-400"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"
                          />
                        </svg>
                        <span class="text-gray-600">Total:</span>
                        <span class="ml-2 font-bold text-lg text-green-600">
                          €{totalAmount.toFixed(2)}
                        </span>
                      </div>
                    </div>
                  </div>
                </div>

                {/* Productos comprados */}
                <div class="border-t pt-6">
                  <h3 class="text-lg font-semibold text-gray-900 mb-4">
                    Productos Adquiridos ({totalItems} artículo
                    {totalItems !== 1 ? "s" : ""})
                  </h3>
                  <div class="space-y-4">
                    {productDetails.map((item, index) => (
                      <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                        <div class="flex-1">
                          <h4 class="font-medium text-gray-900">{item.name}</h4>
                          {item.quantity > 1 && (
                            <p class="text-sm text-gray-600">
                              Cantidad: {item.quantity}
                            </p>
                          )}
                        </div>
                        <div class="text-right">
                          <p class="font-semibold text-gray-900">
                            €
                            {item.amount
                              ? (item.amount / 100).toFixed(2)
                              : totalAmount.toFixed(2)}
                          </p>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            </div>

            {/* Acciones principales */}
            <div class="bg-white rounded-2xl shadow-lg border border-gray-200 p-6">
              <h3 class="text-lg font-semibold text-gray-900 mb-4">
                Acciones Disponibles
              </h3>
              <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                {/* Factura */}
                <div class="text-center">
                  {dbOrder?.invoice_url ? (
                    <a
                      href={dbOrder.invoice_url}
                      target="_blank"
                      class="inline-flex items-center px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium w-full justify-center"
                    >
                      <svg
                        class="w-5 h-5 mr-2"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                        />
                      </svg>
                      Descargar Factura
                    </a>
                  ) : dbOrder ? (
                    <InvoiceButton client:load orderId={dbOrder.id} />
                  ) : (
                    <button
                      disabled
                      class="inline-flex items-center px-6 py-3 bg-gray-300 text-gray-500 rounded-lg cursor-not-allowed font-medium w-full justify-center"
                    >
                      <svg
                        class="w-5 h-5 mr-2"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                        />
                      </svg>
                      Factura Pendiente
                    </button>
                  )}
                </div>

                {/* Dashboard */}
                <div class="text-center">
                  <a
                    href="/dashboard"
                    class="inline-flex items-center px-6 py-3 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors font-medium w-full justify-center"
                  >
                    <svg
                      class="w-5 h-5 mr-2"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z"
                      />
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M8 5a2 2 0 012-2h4a2 2 0 012 2v2H8V5z"
                      />
                    </svg>
                    Mi Dashboard
                  </a>
                </div>

                {/* Soporte */}
                <div class="text-center">
                  <a
                    href="/support"
                    class="inline-flex items-center px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-medium w-full justify-center"
                  >
                    <svg
                      class="w-5 h-5 mr-2"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"
                      />
                    </svg>
                    Contactar Soporte
                  </a>
                </div>
              </div>
            </div>

            {/* CTA para seguir comprando */}
            <div class="text-center">
              <a
                href="/"
                class="inline-flex items-center px-8 py-3 bg-gray-900 text-white rounded-lg hover:bg-gray-800 transition-colors font-medium"
              >
                <svg
                  class="w-5 h-5 mr-2"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M7 16l-4-4m0 0l4-4m-4 4h18"
                  />
                </svg>
                Seguir Explorando
              </a>
            </div>
          </div>
        ) : (
          /* Estado de error */
          <div class="text-center">
            <div class="mx-auto flex items-center justify-center h-20 w-20 rounded-full bg-red-100 mb-6">
              <svg
                class="h-10 w-10 text-red-600"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                />
              </svg>
            </div>
            <h1 class="text-3xl font-bold text-gray-900 mb-4">
              Session ID No Válido
            </h1>
            <p class="text-gray-600 mb-6">
              La sesión de pago no pudo ser encontrada en nuestro sistema.
            </p>
            <div class="bg-gray-50 border border-gray-200 rounded-lg p-6 mb-6">
              <h3 class="font-semibold text-gray-900 mb-2">
                Esto puede suceder porque:
              </h3>
              <ul class="text-sm text-gray-600 space-y-1 text-left">
                <li>• El enlace de confirmación es incorrecto o ha expirado</li>
                <li>• Hubo un problema durante el proceso de pago</li>
                <li>• El pago fue cancelado antes de completarse</li>
                <li>• La sesión fue utilizada en modo de prueba</li>
              </ul>
            </div>
            <div class="space-y-4">
              <p class="text-sm text-gray-500">
                Session ID para soporte:{" "}
                <code class="bg-gray-100 px-2 py-1 rounded font-mono text-xs">
                  {sessionId}
                </code>
              </p>
              <div class="flex flex-col sm:flex-row gap-4 justify-center">
                <a
                  href="/support"
                  class="inline-flex items-center px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
                >
                  <svg
                    class="w-5 h-5 mr-2"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"
                    />
                  </svg>
                  Contactar Soporte
                </a>
                <a
                  href="/"
                  class="inline-flex items-center px-6 py-3 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors"
                >
                  <svg
                    class="w-5 h-5 mr-2"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"
                    />
                  </svg>
                  Volver al Inicio
                </a>
                <a
                  href="/dashboard"
                  class="inline-flex items-center px-6 py-3 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors"
                >
                  <svg
                    class="w-5 h-5 mr-2"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                    />
                  </svg>
                  Mi Cuenta
                </a>
              </div>
            </div>
          </div>
        )
      }
    </div>
  </div>
</BaseLayout>

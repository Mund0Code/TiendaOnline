---
import BaseLayout from "../../layouts/Layout.astro";
import { supabase } from "../../lib/supabaseClient";

const { data: categories = [], error } = await supabase
  .from("categories")
  .select("id, name")
  .order("name", { ascending: true });

if (error) console.error("Error cargando categorías:", error);
---

<BaseLayout title="Categorías">
  <section
    class="min-h-screen bg-gradient-to-br mt-20 from-blue-50 to-indigo-100"
  >
    <div class="max-w-6xl mx-auto px-4 py-16">
      <!-- Header -->
      <div class="text-center mb-12">
        <h1 class="text-4xl md:text-5xl font-bold text-gray-800 mb-4">
          Explora nuestras
          <span
            class="text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-purple-600"
          >
            Categorías
          </span>
        </h1>
        <p class="text-lg text-gray-600 max-w-2xl mx-auto">
          Descubre libros organizados por temáticas que te apasionan
        </p>
      </div>

      {
        error ? (
          <div class="max-w-md mx-auto">
            <div class="bg-red-50 border border-red-200 rounded-lg p-6 text-center">
              <div class="w-12 h-12 mx-auto mb-4 bg-red-100 rounded-full flex items-center justify-center">
                <svg
                  class="w-6 h-6 text-red-600"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                  />
                </svg>
              </div>
              <h3 class="text-lg font-semibold text-red-800 mb-2">
                Error de conexión
              </h3>
              <p class="text-red-600">
                No pudimos cargar las categorías. Inténtalo más tarde.
              </p>
            </div>
          </div>
        ) : categories.length === 0 ? (
          <div class="max-w-md mx-auto">
            <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-6 text-center">
              <div class="w-12 h-12 mx-auto mb-4 bg-yellow-100 rounded-full flex items-center justify-center">
                <svg
                  class="w-6 h-6 text-yellow-600"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                  />
                </svg>
              </div>
              <h3 class="text-lg font-semibold text-yellow-800 mb-2">
                No hay categorías
              </h3>
              <p class="text-yellow-600">Aún no se han creado categorías.</p>
            </div>
          </div>
        ) : (
          <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            {categories.map((cat) => (
              <a
                href={`/categorias/${cat.id}`}
                class="group relative overflow-hidden bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1"
              >
                <div class="absolute inset-0 bg-gradient-to-br from-blue-500/10 to-purple-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300" />

                <div class="relative p-6">
                  <div class="flex items-center justify-between mb-4">
                    <div class="w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg flex items-center justify-center">
                      <svg
                        class="w-6 h-6 text-white"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
                        />
                      </svg>
                    </div>
                    <div class="opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                      <svg
                        class="w-5 h-5 text-blue-600"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M9 5l7 7-7 7"
                        />
                      </svg>
                    </div>
                  </div>

                  <h3 class="text-xl font-semibold text-gray-800 mb-2 group-hover:text-blue-600 transition-colors duration-300">
                    {cat.name}
                  </h3>

                  <p class="text-gray-600 text-sm">Explorar libros</p>
                </div>

                <div class="absolute bottom-0 left-0 right-0 h-1 bg-gradient-to-r from-blue-500 to-purple-600 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300" />
              </a>
            ))}
          </div>
        )
      }
    </div>
  </section>
</BaseLayout>

<style>
  /* Animaciones personalizadas */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .grid > * {
    animation: fadeInUp 0.6s ease-out forwards;
  }

  .grid > *:nth-child(1) {
    animation-delay: 0.1s;
  }
  .grid > *:nth-child(2) {
    animation-delay: 0.2s;
  }
  .grid > *:nth-child(3) {
    animation-delay: 0.3s;
  }
  .grid > *:nth-child(4) {
    animation-delay: 0.4s;
  }
  .grid > *:nth-child(5) {
    animation-delay: 0.5s;
  }
  .grid > *:nth-child(6) {
    animation-delay: 0.6s;
  }
  .grid > *:nth-child(7) {
    animation-delay: 0.7s;
  }
  .grid > *:nth-child(8) {
    animation-delay: 0.8s;
  }
</style>
